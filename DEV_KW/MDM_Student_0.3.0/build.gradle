buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.3'
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.0'
    }
}
allprojects {
    repositories {
        jcenter()
        maven { url "https://jitpack.io" }
    }
}
apply plugin: 'com.android.application'
apply plugin: 'com.google.protobuf'

android {
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    signingConfigs {
        kiway {
        storeFile file('F:/android_signature/kiway.key')
//            storeFile file('C:/Users/Administrator/.android/kiway.keystore')
            storePassword 'kiway123'
            keyAlias 'kiway'
            keyPassword 'kiway123'
        }
    }
    compileSdkVersion 26
    buildToolsVersion '26.0.0'
    useLibrary 'org.apache.http.legacy'
    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 22
        versionCode 20
        versionName "0.2.0"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.kiway
        }
        sit {
            debuggable true
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.kiway
        }
    }

    productFlavors {
        aosp {
            applicationId 'cn.kiway.mdm'
            testApplicationId 'com.android.launcher3.tests'
        }
    }
    sourceSets {
        main {
            res.srcDirs = ['res']
            java.srcDirs = ['src', 'src_config', 'aidl']
            aidl.srcDirs = ['aidl']
            manifest.srcFile 'AndroidManifest-common.xml'
            proto.srcDirs 'protos/'
            assets.srcDirs = ['assets', 'assets']
            jniLibs.srcDirs = ['jniLibs']

        }

        androidTest {
            java.srcDirs = ['tests/src']
            res.srcDirs = ['tests/res']
            manifest.srcFile "tests/AndroidManifest-common.xml"
        }
        lintOptions {
            checkReleaseBuilds false
            // Or, if you prefer, you can continue to check for errors in release builds,
            // but continue the build even when errors are found:
            abortOnError false
        }
        aosp {
            manifest.srcFile "AndroidManifest.xml"
        }

        aospAndroidTest {
            manifest.srcFile "tests/AndroidManifest.xml"
        }
    }
}

repositories {
    mavenCentral()
    jcenter()
}

final String SUPPORT_LIBS_VERSION = '23.+'
dependencies {

    compile 'com.android.support:multidex:1.0.1'
    compile "com.android.support:recyclerview-v7:${SUPPORT_LIBS_VERSION}"
    compile "com.android.support:palette-v7:${SUPPORT_LIBS_VERSION}"
    compile 'com.google.protobuf.nano:protobuf-javanano:3.0.0-alpha-2'
    testCompile 'junit:junit:4.12'
    androidTestCompile 'org.mockito:mockito-core:1.+'
    androidTestCompile 'com.google.dexmaker:dexmaker:1.2'
    androidTestCompile 'com.google.dexmaker:dexmaker-mockito:1.2'
    androidTestCompile "com.android.support:support-annotations:${SUPPORT_LIBS_VERSION}"
    compile project(':mdmsdk')
    compile project(':zxing')
    compile project(':materiallockview')
    //compile project(':classify')
    compile files('libs/android-async-http-1.4.5.jar')
    compile files('libs/BaiduLBS_Android.jar')
    compile files('libs/gson-2.8.0.jar')
    compile files('libs/HwPush_SDK_V2705.jar')
    compile 'com.github.jetradarmobile:android-snowfall:1.1.6'
    compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'
    compile 'org.xutils:xutils:3.5.0'
    compile 'com.borax12.materialdaterangepicker:library:1.9'
    //zbus
    //    compile files('libs/netty-all-4.0.51.Final.jar')
    //    compile files('libs/fastjson-1.2.24.jar')
    //    compile files('libs/hutool-all-3.2.3.jar')
    //    compile files('libs/push-server-zbus-1.0.0.jar')
    //    compile files('libs/zbus-0.11.3.jar')
    //rabbit
    compile files('libs/amqp-client-4.1.0.jar')
    compile files('libs/fastjson-1.2.47.jar')
    compile files('libs/logback-classic-1.1.11.jar')
    compile files('libs/logback-core-1.1.11.jar')
  //  compile files('libs/wx-reply-rabbitMQ-1.0-SNAPSHOT.jar')
    compile files('libs/slf4j-api-1.7.25.jar')
}

protobuf {
    // Configure the protoc executable
    protoc {
        artifact = 'com.google.protobuf:protoc:3.0.0-alpha-3'

        generateProtoTasks {
            all().each { task ->
                task.builtins {
                    remove java
                    javanano {
                        option "java_package=launcher_log.proto|com.android.launcher3.userevent.nano"
                        option "enum_style=java"
                    }
                }
            }
        }
    }
}
