<template>
   <wxc-navpage data-role="none" height={{navBarHeight}} background-color="#00cc99" title="亲子圈"
    title-color="white" right-item-src="{{rightItemImg}}">
    <scroller class="content">
          <div class="wrapper" >
            <div class="class_list">
                <text class="class_name" repeat='{{myClass}}' style='border-bottom-color: {{borderColor}};border-bottom-width: {{borderWidth}};border-bottom-style: {{borderStyle}};color:{{color}}' onclick='getPost($index,id)'>{{name}}</text>
            </div>

            <div class="post_main">
                <div class="post_list" repeat='{{postList}}'>
                    <img class='headPic' src="{{post.ownerImg}}" />
                    <div class="post_cont">
                        <div class="between_row">                      
                            <text class="owner_name">{{post.ownerName}}</text>
                            <text class="post_time">{{post.postTime}}</text>
                        </div>
                        <div class="cont">
                            <text class="post_txt">{{post.content}}</text>
                            <div class="post_imgs">
                                <img class="post_img_list" repeat="post.images"  src="{{post.images[$index]}}"/>
                            </div>
                        </div>

                        <div class="praise_cont">
                            <!--点赞-->
                            <div class="cont_row" onclick="handlePraise(post.id,$index)">
                                <img class="praise_icon" src="{{imagesIcon.blankPic}}" />
                                <text class="praise_txt" if="{{praiseList.length>0}}">{{praiseList.length}}</text>
                            </div>

                            <!--评论-->
                            <div class="cont_row" onclick="goToComment(post.id)">
                                <img  class="praise_icon" src="{{imagesIcon.commentPic}}"/>
                                <text class="praise_txt" if="{{replyList.length>0}}">{{replyList.length}}</text>
                            </div>

                            <!--删除-->
                            <div class="cont_row" onclick="deletePost(post.id,$index)" if="userInfo.id==post.owner">
                                <img class="praise_icon" src="{{imagesIcon.deletePic}}"/>
                                <text class="praise_txt">删除</text>
                            </div>
                        </div>

                        <!--点赞用户：-->
                        <div class="praise_names" if="{{praiseList.length>0}}">
                            <img class="praise_icon_2" src="{{imagesIcon.blankPic}}"/>
                            <div class="praise_users">
                                <text repeat="{{praiseList}}" if="{{$index<praiseList.length-1}}">{{userName}},</text>
                                <text repeat="{{praiseList}}" if="{{$index==praiseList.length-1}}">{{userName}}</text>
                            </div>
                        </div>

                        <!--评论内容：-->
                        <div class="praise_reply">        
                            <div class='reply_list'  repeat="{{replyList}}" if="{{userName}}">
                                <div class="between_row">                                  
                                    <div style="flex:4;display: flex;flex-direction: row;">
                                        <text style="color:#636262">{{userName}}：{{content}}</text>
                                    </div>
                                    <text class="p_time" style="flex:1;text-align: right;">{{replyTime}}</text>
                                </div>
                            </div> 
                        </div>
                    </div>
                </div>
                <text if='{{postList.length<=0}}' style="padding: 100;font-size: 36;text-align: center;">{{dataTxt}}</text>
            </div>
          </div>
    </scroller>
  </wxc-navpage>

</template>

<style>
  .praise_reply{margin-top: 10px;}
  .reply_list{margin-top: 15px;}
  .reply_txt{color:#777;}
  .p_time{color:#b8b8b8;}

  .praise_users{color:#2b2b2b;font-size: 32px;display: flex;flex-direction: row;flex: 1;flex-wrap: wrap;}
  .praise_icon_2{width: 35px;height: 35px;margin-right:10px;}
  .praise_icon{width: 45px;height: 45px;margin-right:15px;}
  .praise_names{padding: 20;background-color: #efeff4;margin-top: 15;display: flex;flex-direction: row;}
  .praise_txt{color: #b8b8b8;}
  .cont_row{display: flex;flex-direction: row;align-items: center;}
  .praise_cont{display: flex;flex-direction: row;align-items: flex-end;margin-top: 30;}
  .cont_row{flex: 1;}
  .post_main{margin-top: 130;background-color: #fff;}

  .content { color: #353535; position: absolute; top: 0; left: 0; right: 0; bottom: 0;}
  .row{width: 750; border-bottom-width: 1; border-bottom-color: #c0c0c0; padding:15; flex-direction: row;} 
  .dropdown{
        justify-content: center;
        align-content: stretch;
        position: relative;
        z-index: 100;
    }
    .wrapper{
        justify-content:flex-start;
        flex-direction: column;
        position: relative;
    }
    .list {
        flex: 1;
        width: 750;
    }
    .refresh-view {
        height: 120;
        width: 750;
        margin-top: 10;
        margin-bottom: 10;
        align-items: center;
        justify-content: center;
     }
     .refresh-arrow {
        font-size: 30px;
        color: #45b5f0;
     }
     .indicator {
        height: 40px;
        width: 40px;
        color:#45b5f0;
     }
    .cell {
        width: 750;
        padding-top: 15;
        padding-bottom: 5;
        padding-left:20;
        padding-right:20;
        border-bottom-width: 1;
        border-style: solid;
        border-color: #999;
    }
    .title{
        font-size:32;
        padding-top:5 ;
        padding-bottom: 5;
        color:#333;
    }
    .info {
        flex-direction: row;
        justify-content: flex-start;
        align-items:stretch;
    }
    .txt {
        font-size:28;
         padding-top:5;
         padding-bottom:5;
         color: #999;
     }
    .status {   }

    .status-1 { color: #090; }
    .status-2 { color: #f00; }

    .class_list{display: flex;flex-direction: row;align-items: center;text-align: center;/*border-bottom-style: solid ;border-bottom-width: 1px;border-bottom-color: #e7e7e7;*/margin-bottom: 30;position: fixed;top: 130;left:0;right:0;background-color: #fff;}
    .class_name {flex: 1;text-align: center;font-size: 36px;padding: 30;border-bottom-style: solid ;}
    .photo{ padding: 10; padding-right: 25;}
    .headPic {width: 110; height: 110;}
    .cake_right{flex: 3;}
    .cake-list{flex-direction: row; justify-content: space-between;}
    .cake-list-name{font-size:38;  height: 80; line-height: 60;}
    .cake-list-time{color: #f80; height: 80; line-height: 60; }
    .cakeContent{ font-size:36; line-height:45; margin-bottom: 10; }

    .pic_list{flex-direction: row; flex-wrap:wrap;}
    .pic_li{height:140; width: 170; margin: 10; }
    .post_list{display: flex;flex-direction:  row;padding:20;border-bottom-style: solid ;border-bottom-width: 1px;border-bottom-color: #e7e7e7;background-color: #ffffff;}
    .headPic {width: 110; height: 110;border-radius: 110;margin-right:20;background-color: #ccc;}
    .owner_name{font-size: 36px;}
    .post_time{color:#b8b8b8;}
    .between_row{display: flex;flex-direction: row;justify-content: space-between;}
    .post_cont{flex: 3;}
    .post_txt{font-size: 36px;margin-bottom: 15;}

    .post_imgs{flex-direction: row; flex-wrap:wrap;}
    .post_img_list{height: 140px;width: 170px;margin-right:10;}
</style>

<script>
  require('weex-components');
  var Utils = require('./javascript/Utils');
  var modal = require('@weex-module/modal');
  var storage = require('@weex-module/storage');

    module.exports = {
        data: {
            screenHeight: 0,
            // biz
            navBarHeight:130,
            status: '1',
            list: [],
            headImg : '',
             praiseImg : '',
             commentImg : '', 
             praiseImg1:'', 
             rightItemImg:'',
             dataTxt:'正在加载中...',
             imagesIcon:{
                    blankPic:'yjpt/images/god.png',
                    commentPic:'yjpt/images/comments.png',
                    deletePic:'yjpt/images/delete.png',
                    selectPic:'yjpt/images/god-1.png'
             },  
             itemList: [
                {
                    name : '昵称',
                    photo : 'yjpt/images/photo_05.png',
                    state:55,
                    content : '今天我想发表一点什么了…………',
                    img : [{picUrl:'yjpt/images/demo5.png'},{picUrl:'yjpt/images/demo2.png'},{picUrl:'yjpt/images/demo4.png'}],
                    date : '11-08',
                    reviewList: [
                        { 
                          pictureUrl: 'yjpt/images/god.png',
                          urlName:'4',
                          pictureUrl1:'yjpt/images/comments.png',
                          urlName1:'100',
                          pictureUrl2:'yjpt/images/delete.png',
                          urlName2:'删除',
                          hit:[{name:'宋智孝'},{name:'金钟国'},{name:'金俊秀'},{name:'Gary'}],
                          praise:[
                                {
                                   id : 1,
                                   name : '张三',
                                   content: '测试数据……',
                                   dateP : '3小时前'
                                },
                                 {
                                   id : 1,
                                   name : '评论人名称',
                                   content: '测试数据……',
                                   dateP : '11/01'
                                }
                          ]
                        }
                    ]
                }
                ,{
                    name : '李老师',
                    photo : 'yjpt/images/photo_06.jpeg',
                    state:55,
                    content : '今日8点33分著名表演艺术家葛存壮因脑梗引发心脏衰竭去世。',
                    img : [],
                    date : '11-02',
                    reviewList: [
                        { 
                          pictureUrl: 'yjpt/images/god.png',
                          urlName:'',
                          pictureUrl1:'yjpt/images/comments.png',
                          urlName1:'100',
                           pictureUrl2:'yjpt/images/delete.png',
                          urlName2:'删除',
                          hit:[{name:'宋智孝'}],
                          praise:[
                                {
                                   id : 1,
                                   name : '张三',
                                   content: '想说什么就说什么……',
                                   dateP : '3小时前'
                                }
                          ]
                        }
                    ]
                }
              ],
              myClass:[],
              postList:[],
              userMap:{},
              userInfo:{},
              hasPraise:'no',
              commentUrl:'comment',
              praiseUsers:[],
              currentIndex:0,
              baseData:[],
              gradeList:[] 
        },
        ready: function () {
            this.screenHeight = this.$getConfig().env.deviceHeight ;
            this.$on('statuschange', function (e) {           
                var detail = e.detail;
               /* this.toast({
                    message: JSON.stringify(detail)
                });*/
                this.status = detail.id;
                this.filter();
            }.bind(this));

           // this.filter();
        },
        created : function(){
             this.rightItemImg = Utils.ip + 'yjpt/images/camera.png';
             Utils.changeImg(this.itemsListL,['src','pictureUrl'],'itemsListL');

              var itemList = this.itemList
              for(var i in itemList){
                 var itemOuter = itemList[i];
                 itemOuter.photo=Utils.changeImg(itemOuter.photo);
                 Utils.changeImg(itemOuter.img,['picUrl']);
                 Utils.changeImg(itemOuter.reviewList,['pictureUrl','pictureUrl1','pictureUrl2'],'reviewList');
              }

              Utils.changeImg(this.imagesIcon,['blankPic','commentPic']);
              Utils.changeImg(this.imagesIcon,['deletePic','selectPic']);

              this.$on('naviBar.rightItem.click',function(){
                  var url=Utils.setOpenUrl(this.$getConfig(),'wdxc_fbwz');
                  Utils.navigate.push(this,url,'true');
              });

              var self = this;

              //用户信息 点赞时用userId 判断，相同用户不能点赞2次
              storage.getItem('userInfo',function(e){
                  if(e.data){
                      self.userInfo = JSON.parse(e.data);
                  }
              });

              setTimeout(function(){
                  storage.getItem('myClass',function(e){
                      if(e.data){
                          self.myClass = JSON.parse(e.data);
                          self.myClass[0].borderWidth = '2px';
                          self.myClass[0].borderStyle = 'sollid';
                          self.myClass[0].borderColor = '#00cc99';
                          self.myClass[0].color = '#00cc99';

                          //获取第一个班级的post
                          self.getPost(0,self.myClass[0].id);

                          storage.getItem('baseData',function(e){
                              if(e.data != 'undefined'){
                                  self.baseData = JSON.parse(e.data);
                                  self.gradeList = self.baseData.gradeList;

                                  for(var i in self.myClass){
                                      for(var j in self.gradeList){                             
                                          if(self.myClass[i].gradeId == self.gradeList[j].id){
                                              self.myClass[i].gradeId = self.gradeList[j].name;
                                          }
                                      }
                                  }
                              }
                          }); 
                      }
                  });

              },500); 

              var mytime = Utils.time('2017-03-02 09:18:00');
        },

        methods: {
            toast: function (params) {
                var modal = require('@weex-module/modal');
                modal.toast(params);
            },
            tabShow:function(index){
                if(this.reviewList[index].pictureUrl == this.images.blankPic){
                    for(var i in this.reviewList){
                        this.reviewList[i].pictureUrl = this.images.blankPic;
                    }
                    this.reviewList[index].pictureUrl = this.images.selectPic;
                }
            },
            filter: function () {
                var status = this.status;
                this.list = [];
                var allList = JSON.parse(initData);
                if(status == '0') {
                    this.list = allList;
                }else {
                    this.list = allList.filter(function(item){
                        return item.questionStatus == status;
                    });
                }
            },

            //亲子圈
            getPost(index,classId){
                var self = this;
                self.currentIndex = index;
                //模拟tabItem
                for(var i in self.myClass){
                    if(i==index){
                        self.myClass[index].borderWidth = '2px';
                        self.myClass[index].borderStyle = 'sollid';
                        self.myClass[index].borderColor = '#00cc99';
                        self.myClass[index].color = '#00cc99';
                    }else{
                        self.myClass[i].borderWidth = '2px';
                        self.myClass[i].borderStyle = 'sollid';
                        self.myClass[i].borderColor = '#e7e7e7';
                        self.myClass[i].color = '#000000';
                    }
                }
                //获取亲子圈数据
                Utils.fetch({
                    url:'/app/class/'+classId+'/moments',
                    method:'get',
                    dataType:'json',
                    success:function(res){
                        if(res.data.StatusCode == '200'){
                            if(res.data.data.postList.length > 0){
                                self.postList = res.data.data.postList;
                                self.userMap = res.data.data.userMap;

                                //将userMap中的用户信息对应到post中
                                for(var p in self.postList){
                                    //时间转换
                                    self.postList[p].post.postTime = Utils.time(self.postList[p].post.create_date);
                                    
                                    //post ownerName/ownerImg
                                    if(self.userMap[self.postList[p].post.owner]){
                                        self.postList[p].post.ownerName = self.userMap[self.postList[p].post.owner][0];
                                        self.postList[p].post.ownerImg = self.userMap[self.postList[p].post.owner][1];
                                    }
                                        
                                    if(self.postList[p].post.img_url){
                                        //post images
                                        self.postList[p].post.images = self.postList[p].post.img_url.split('#');
                                    }else{
                                        self.postList[p].post.images = [];
                                    }                                    

                                    //点赞用户：
                                    if(self.postList[p].praiseList.length > 0){
                                        for(var j in self.postList[p].praiseList){
                                            if(self.userMap[self.postList[p].praiseList[j].user_id]){
                                                self.postList[p].praiseList[j].userName = self.userMap[self.postList[p].praiseList[j].user_id][0];
                                            }else{
                                                //如果userMap中无对应praiseList中的user_id,则删除praiseList中该user_id对应的记录
                                                self.postList[p].praiseList.splice(j,1);
                                            }
                                        }
                                    }

                                    //评论数据：
                                    if(self.postList[p].replyList.length > 0){
                                        for(var j in self.postList[p].replyList){
                                            if(self.userMap[self.postList[p].replyList[j].user_id]){
                                                self.postList[p].replyList[j].userName = self.userMap[self.postList[p].replyList[j].user_id][0];
                                                self.postList[p].replyList[j].replyTime = Utils.time(self.postList[p].replyList[j].create_date);
                                            }else{
                                                self.postList[p].replyList.splice(j,1);
                                                if(self.postList[p].replyList.length==1 || j==self.postList[p].replyList.length-1){
                                                    self.postList[p].replyList = [];
                                                }
                                            }
                                        }
                                    }

                                }
                                
                            }else{
                                self.postList = [];
                                self.userMap = [];
                                self.dataTxt = '暂无数据...';
                            }

                        }else{
                            self.dataTxt = '暂无数据...';
                        }
                    }
                });
                    
            },

            /*点赞*/
            handlePraise(postId,index){
                var self = this;
                var classId = '';
                for(var i in self.postList){
                    if(self.postList[i].post.id == postId){
                        classId = self.postList[i].post.class_id;
                    }
                }



                // 判断是否已点赞                  
                if(self.postList[index].praiseList.length > 0){                    
                    for(var i in self.postList[index].praiseList){
                        if(self.postList[index].praiseList[i].user_id == self.userInfo.id){
                            self.hasPraise = 'yes';
                            break;
                        }
                    }
                }else{
                    // 未点赞
                    self.hasPraise = 'no';                    
                }
                    
                // console.log(self.hasPraise);

                //未点赞继续：
                if(self.hasPraise != 'yes'){
                    Utils.fetch({
                        url:'/app/moments/'+postId+'/praise',
                        method:'post',
                        dataType:'json',
                        success:function(res){
                            if(res.data.StatusCode == '200'){
                                //点赞成功
                                var time = new Date();

                                var praise = {};
                                praise.id = '';
                                praise.class_post_id = postId;
                                praise.user_id = self.userInfo.id;
                                praise.create_date = time.getFullYear+'-'+time.getMonth()+1+'-'+time.getDate()+' '+time.getHours()+':'+time.getMinutes()+':'+time.getSeconds();

                                self.postList[index].praiseList.push(praise);

                                //点赞用户：
                                // for(var p in self.postList){
                                    if(self.postList[index].praiseList.length > 0){
                                        for(var j in self.postList[index].praiseList){
                                            self.postList[index].praiseList[j].userName = self.userMap[self.postList[index].praiseList[j].user_id][0];
                                        }
                                    }
                                // }
                            }else{
                                modal.toast({
                                    message:'操作失败，请稍后重试',
                                    duration:'1'
                                });
                            }
                        }
                    });
                }
                    
            },
            goToComment(postId){
                var self  = this;
                var url = Utils.setOpenUrl(self.$getConfig(),self.commentUrl);
                storage.setItem('postId',postId,function(){});
                Utils.navigate.push(self,url,'true');

            },

            //删除亲子圈
            deletePost(postId,index){
                var self = this;
                modal.confirm({
                    message:'确定要删除该记录吗？',
                    okTitle:'确定',
                    cancelTitle:'取消'
                },function(res){
                    if(res == '确定'){
                        Utils.fetch({
                            url:'/app/moments/'+postId,
                            method:'delete',
                            dataType:'json',
                            success:function(res){
                                if(res.data.StatusCode == '200'){
                                    modal.toast({
                                        message:'删除成功',
                                        duration:'1'
                                    });

                                    for(var i in self.postList){
                                        if(self.postList[i].post.id == postId){
                                            self.postList.splice(index,1);
                                        }
                                    }
                                }else{
                                    modal.toast({
                                        message:'删除失败',
                                        duration:'1'
                                    });
                                }
                            }
                        });
                    }
                });
            }
        }
    }
</script>

